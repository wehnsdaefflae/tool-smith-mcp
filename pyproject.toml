[project]
name = "tool-smith-mcp"
version = "0.1.0"
description = "MCP server that dynamically creates and manages tools using LLM assistance"
requires-python = ">=3.10"
dependencies = [
    "mcp>=1.0.0",
    "anthropic>=0.34.0",
    "numpy>=1.24.0",
    "sentence-transformers>=2.2.0",
    "chromadb>=0.4.0",
    "pydantic>=2.0.0",
    "asyncio-mqtt>=0.13.0",
    "toml>=0.10.2",
    "docker>=6.0.0",
    "hatchling>=1.27.0",
]

[project.scripts]
tool-smith-mcp = "tool_smith_mcp.core.server:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
    "flake8>=6.0.0",
    # "flake8-complexity>=0.9.0",
    "radon>=6.0.0",
    "types-docker>=7.0.0",
    "types-toml>=0.10.8"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatchling.build.targets.wheel]
packages = ["src/tool_smith_mcp"]

[tool.hatchling.build.targets.wheel.sources]
"src" = ""
"resources" = "tool_smith_mcp/resources"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "ARG", "SIM", "C90"]
ignore = ["E501"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.flake8]
max-complexity = 10
max-line-length = 88

[tool.radon]
cc_min = "B"
mi_min = "B"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=tool_smith_mcp --cov-report=term-missing"
